stage: 2
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: '{{ app }}-{{ branch }}-autoscaler'
  namespace: '{{ namespace }}'
spec:
  maxReplicas: 12
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: '{{ app }}-{{ branch }}-{{ build }}'
  targetCPUUtilizationPercentage: 75
---
stage: 2
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    app: '{{ app }}-{{ branch }}-{{ build }}'
  name: '{{ app }}-{{ branch }}-{{ build }}'
  namespace: '{{ namespace }}'
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: '{{ app }}-{{ branch }}-{{ build }}'
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: '{{ app }}-{{ branch }}-{{ build }}'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - '{{ app }}-{{ branch }}-{{ build }}'
            topologyKey: kubernetes.io/hostname
      containers:
      - name: php-fpm
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: 'mysql57-credentials-{{ branch }}'
              key: endpoint
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: 'mysql57-credentials-{{ branch }}'
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: 'mysql57-credentials-{{ branch }}'
              key: password
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: 'mysql57-credentials-{{ branch }}'
              key: database
        image: '{{ image_php-fpm }}'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 1
          exec:
            command:
            - /healthcheck.sh
            - --listen-queue=10 # fails if there are more than 10 processes waiting in the fpm queue
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 1
          exec:
            command:
            - /healthcheck.sh
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 1100Mi
          requests:
            cpu: 250m
            memory: 300Mi
        volumeMounts:
        - name: shared-files
          mountPath: /src-shared
      - name: openresty
        image: 'prlx/k8s-openresty-php-openresty:release-latest'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: openresty
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: openresty
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 2
          timeoutSeconds: 2
        ports:
        - containerPort: 80
          name: openresty
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: shared-files
          mountPath: /src-shared
        - name: openresty-config
          mountPath: /etc/nginx/conf.d/
      volumes:
      - name: shared-files
        emptyDir: {}
      - name: 'openresty-config'
        configMap:
          name: '{{ branch }}-openresty-config'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 20